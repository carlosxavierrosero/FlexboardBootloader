#NoTrayIcon
#Region ;**** Directives created by AutoIt3Wrapper_GUI ****
#AutoIt3Wrapper_icon=perro7.ico
#AutoIt3Wrapper_outfile=enumer_picusb.exe
#AutoIt3Wrapper_Compression=4
#AutoIt3Wrapper_UseUpx=n
#AutoIt3Wrapper_UseAnsi=y
#AutoIt3Wrapper_Res_Comment=comentarios
#AutoIt3Wrapper_Res_Description=descripcion
#AutoIt3Wrapper_Res_Fileversion=3.0.0.6
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
#AutoIt3Wrapper_Res_LegalCopyright=Este Programa es de uso libre, Se Mantienen los nombres del autor y NO debe lucrarse por su uso
#AutoIt3Wrapper_Res_SaveSource=y
#AutoIt3Wrapper_Res_Language=8202
#EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.2.10.0
 Author:  Pedro PalitroqueZ - palitroquez@gmail.com

 ********************************************************************************
 Automatización de Datos Enumeración USB

 Programa que permite configurar los descriptores y los archivos instaladores
 necesarios para enumerar los pic 18F4x5x y hacer posible las transferencias
 a través del puerto serie universal USB.

 En la primera versión se manejan 2 tipos de transferencias, la de propósito
 general como la define Microchip usando la biblioteca mpusbapi.dll[1] y su instalador
 mchpusb.inf y la emulación rs-232 mediante la clase CDC[2] con su instalador
 mchpcdc.inf

 En la parte de la programación del uC PIC, ambos usan unas funciones que provee
 el PIC C Compiler de la empresa CCS. En el caso [1] se gestiona con usb_desc_scope.h
 en el caso [2] se gestiona con usb_desc_cdc.h

 La idea es que el usuario pueda cambiar los datos, tales como el nombre del dispositivo,
 el fabricante, el Vendor ID, el Product ID, etc y el programa se encargue de modificar
 dichos datos en los archivos mencionados anterioriormente.

 -------------------------------------------------------------------------------
 Historial:
 
 v3.0 19-feb-08
 
 - mudado el código fuente del Visual Basic 6.0 al AutoIT  con la iniciativa
   de apoyar al software libre ;-)
 
 - actualizado para MCHPFSUSB v1.3 que corresponde a la actualización de:
   - mchpusb.inf
   - mchpcdc.inf
   (para mayor información leer las release notes de MCHPFSUSB en www.microchip.com)

 -------------------------------------------------------------------------------
 v2.0 01-feb-08

 - añadida nuevas opciones:
   - Crear una clase aparte solo para el dispositivo.
   - incluir un ícono a esa clase creada.
   - mejor estructuración de código fuente.
   - al cerrar el programa se guardan los datos de todos los campos.
   - al abrir el programa se cargan los datos de todos los campos, guardados
     con anterioridad.
 
 -------------------------------------------------------------------------------
 v1.0 versión inicial 09-ene-08

 -------------------------------------------------------------------------------
 Sobre los Derechos

 Cualquier persona es libre de usar, modificar, mejorar como quiera este
 software SIN fines de lucro y siempre y cuando conserve el/los nombre/s
 del/los autor/es original/es.
 (en el historial ó en los codigos de las funciones, procedimientos a nivel
 de clase, modular o de formulario puede incluir la autoría y las modificaciones
 hechas respectivas)

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

#include-once 

;~ Opt("MustDeclareVars", 1) ; el equivalente a option explicit
Opt("GUIOnEventMode", 1)
Opt("GUICloseOnESC",1)		; evita que se produzca el evento close al teclear ESC

Global $icono_perro = @TempDir & "\perro7.ico"
fileinstall("perro7.ico",$icono_perro,1)
;al momento de compilar, debe estar perro7.ico en el script path

;~ #include <GUIConstants.au3>
#include <GuiTab.au3>
#Include <GuiEdit.au3>
;#include <EzSkin.au3>

Global $Icon1
local const $iForm_cerrado=489  ;484
local const $iForm_abierto=753  ;753
Global $fBandera_form_abierto_cerrado=False
Global $fBandera_tipo_transferencia=true
Global $fBandera_guardar_ambos=False
Global $fBandera=True
local $iAltura_form=516
Local $sVistapreliminar
Global $sNombre_icono, $sRuta_nombre_icono
Global $txtnombre,$txtvid,$txtpid,$txtubicacion,$txtdescripcion
Global $txtfabricante,$txtversion,$txtfecha,$txtguid
Global $txtclassname,$txtclassdesc

#include "includes\cadenas.au3"
#include "includes\crear_mchusbapi.au3"
#include "includes\crear_desc_scope.au3"
#include "includes\crear_mchpcdc.au3"
#include "includes\crear_desc_cdc.au3"
#include "includes\crear_funciones_generales.au3"


#include "includes\Crear_Form_principal.au3"
#include "includes\Crear_Form_secundario.au3"



;****************************************************************
vMain()
;****************************************************************
Func vMain()
	GUICtrlSetState($optbulk,$GUI_CHECKED)
	GUICtrlSetState($optccs,$GUI_CHECKED)
	GUICtrlSetState($optcdc,$GUI_UNCHECKED)
	
	vIniCializar_variables()
	_GUICtrlTab_SetItemText($Tab1,0,"mchpusb.inf")
	_GUICtrlTab_SetItemText($Tab1,1,"usb_desc_scope.h")
;~ 	GUICtrlSetData($TabSheet1,"mchpusb.inf")
;~ 	GUICtrlSetData($TabSheet2,"usb_desc_scope.h")
	cmdplantillaClick()
EndFunc

;****************************************************************
While 1
  Sleep(1)   ; ciclo eterno en espera de ejecución de eventos
WEnd
  
;****************************************************************
Func cmdguidClick()
	If MsgBox(4+48+8192,"¡Aviso!","¿Desea cambiar el CLASSGUID? cuando ejecute mchpusb.inf, " _
								  & "se creará otra rama en el registro de configuraciones") = 6 Then
		GUICtrlSetData($txtguid,_sCreateGUID())
    EndIf
EndFunc

;****************************************************************
Func cmdopcionesavanzadasClick()
if $fBandera_form_abierto_cerrado=false Then
;~ 	WinMove($Form1,-1,(@DesktopWidth-$iForm_abierto)/2,(@DesktopHeight-$iAltura_form)/2, _
;~ 			$iForm_abierto,$iAltura_form)
;~ 	GUICtrlSetData($cmdopcionesavanzadas,"<<<--" & $caption_opc_avanz)
	$fBandera_form_abierto_cerrado=True
Else
;~ 	WinMove($Form1,-1,(@DesktopWidth-$iForm_cerrado)/2,(@DesktopHeight-$iAltura_form)/2, _
;~ 			$iForm_cerrado-5,$iAltura_form)
;~ 	GUICtrlSetData($cmdopcionesavanzadas,$caption_opc_avanz & "-->>>")
	$fBandera_form_abierto_cerrado=false
EndIf
EndFunc
;****************************************************************
Func cmdplantillaClick()
GUISetState(@SW_LOCK)
if $fBandera_tipo_transferencia=True Then
	_GUICtrlTab_SetItemText($Tab1,0,"mchpusb.inf")
	_GUICtrlTab_SetItemText($Tab1,1,"usb_desc_scope.h")
	if _GUICtrlTab_GetCurSel($Tab1)=0 Then
		_GUICtrlEdit_BeginUpdate($txtmchusbapi)
		ControlSetText("V.3 - Automatización de Datos Enumeración USB","",$txtmchusbapi,sCrear_mchusbapi(GUICtrlRead($txtnombre), _		
											GUICtrlRead($txtvid), GUICtrlRead($txtpid), _
											GUICtrlRead($txtversion), GUICtrlRead($txtfecha), _
											GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante), _
											GUICtrlRead($txtguid),$sNombre_icono, _
											GUICtrlRead($txtclassname),GUICtrlRead($txtclassdesc) _
											) _
					  ) 
	_GUICtrlEdit_EndUpdate($txtmchusbapi)
	Else
		_GUICtrlEdit_BeginUpdate($txtusb_desc_scope)
		ControlSetText("V.3 - Automatización de Datos Enumeración USB","",$txtusb_desc_scope,sCrear_usb_desc_scope(GUICtrlRead($txtnombre), _
					                       GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
																) _
					  )
		_GUICtrlEdit_EndUpdate($txtusb_desc_scope)
	EndIf
Else
	_GUICtrlTab_SetItemText($Tab1,0,"mchpcdc.inf")
	_GUICtrlTab_SetItemText($Tab1,1,"usb_desc_cdc.h")
	If GUICtrlRead($Tab1)=0 Then
		_GUICtrlEdit_BeginUpdate($txtmchpcdc)
		ControlSetText("V.3 - Automatización de Datos Enumeración USB","",$txtmchpcdc,sCrear_mchpcdc(GUICtrlRead($txtnombre), _	
					                       GUICtrlRead($txtvid),GUICtrlRead($txtpid), _
										   GUICtrlRead($txtversion),GUICtrlRead($txtfecha), _
										   GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante) _
														 ) _
					   )
	_GUICtrlEdit_EndUpdate($txtmchpcdc)
	Else
		_GUICtrlEdit_BeginUpdate($txtusb_desc_cdc)
		ControlSetText("V.3 - Automatización de Datos Enumeración USB","",$txtusb_desc_cdc, sCrear_usb_desc_cdc(GUICtrlRead($txtnombre), _
					                       GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
														      ) _
					   )
		_GUICtrlEdit_EndUpdate($txtusb_desc_cdc) 
	EndIf
EndIf	
GUISetState(@SW_UNLOCK)
EndFunc

;************************************************************************************
Func Icon1Click()
	Local $s, $iArchivo_y_ruta_debe_existir=1+2
	$s=FileOpenDialog("Buscar Ícono...",@ScriptDir & "\","Archivo de iconos (*.ico)", _
					  $iArchivo_y_ruta_debe_existir)

	if not @error then
		$sNombre_icono=sTomar_nombre_icono($s)
		GUICtrlSetImage($Icon1,$sNombre_icono)
		$sRuta_nombre_icono=$s
	EndIf
EndFunc
;************************************************************************************

Func lblnotaClick()
MsgBox(64+8192,"Información: ","Este VID y PID es proporcionado por la Microchip bajo su licencia." _
          & " Para obtener un VID y un PID con fines comerciales debe tener un registro APROBADO " _
		  & "por www.usb.org ")
EndFunc
;************************************************************************************
Func mnuinfoClick()
	Local $iIcono_inf_y_tarea_modal=64+8192
	MsgBox($iIcono_inf_y_tarea_modal,"Información",$sInformacion)
EndFunc

;****************************************************************
Func optbulkClick()
	$fBandera_tipo_transferencia=True
	cmdplantillaClick()
;~ 	GUICtrlSetState($cmdopcionesavanzadas,$GUI_SHOW)
EndFunc
;****************************************************************
Func optcdcClick()
	$fBandera_tipo_transferencia=False
	cmdplantillaClick()
	
	if $fBandera_form_abierto_cerrado=true Then  ; las opciones avanzadas no sirven para modo CDC
;~ 		WinMove($Form1,"",(@DesktopWidth-$iForm_cerrado)/2,(@DesktopHeight-$iAltura_form-50)/2, _
;~ 				$iForm_cerrado,$iAltura_form)
;~ 		GUICtrlSetData($cmdopcionesavanzadas,$caption_opc_avanz & "-->>>")
		$fBandera_form_abierto_cerrado=false
	EndIf
;~ 	GUICtrlSetState($cmdopcionesavanzadas,$GUI_HIDE)
EndFunc
;****************************************************************

Func Tab1Click()
	cmdplantillaClick()
EndFunc
;****************************************************************
Func optccsClick()
	
EndFunc
;****************************************************************
Func cmddefectoClick()
	If MsgBox(4+48+8192,"¡Aviso!","Esto Rellenará los campos con los datos por defecto que trae" _
					& "el programa originalmente, y se perderan los actuales. " _
					& "¿Desea continuar?") = 6 Then
		vCargar_datos_originales()
	EndIf
EndFunc
;****************************************************************
Func cmdguardarClick()
Local $sDatos
$sDatos = ""
    If $fBandera_tipo_transferencia=True Then ; la parte de mpusbapi
        If BitAnd(GUICtrlRead($chkguardarambos),$GUI_CHECKED)= 1 Then
            $sDatos = sCrear_mchusbapi( GUICtrlRead($txtnombre), _
										GUICtrlRead($txtvid), GUICtrlRead($txtpid), _
										GUICtrlRead($txtversion), GUICtrlRead($txtfecha), _
										GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante), _
										GUICtrlRead($txtguid),$sNombre_icono, _
										GUICtrlRead($txtclassname),GUICtrlRead($txtclassdesc) _
									)
            vGuardar_archivos($sDatos, "mchpusb", "inf")
            $sDatos = ""
            $sDatos = sCrear_usb_desc_scope(GUICtrlRead($txtnombre), _
					                       GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
										)
            vGuardar_archivos($sDatos, "usb_desc_scope", "h")
        Else
			If GUICtrlRead($Tab1)=0 Then
				$sDatos = sCrear_mchusbapi( GUICtrlRead($txtnombre), _
											GUICtrlRead($txtvid), GUICtrlRead($txtpid), _
											GUICtrlRead($txtversion), GUICtrlRead($txtfecha), _
											GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante), _
											GUICtrlRead($txtguid),$sNombre_icono, _
											GUICtrlRead($txtclassname),GUICtrlRead($txtclassdesc) _
										)
				vGuardar_archivos($sDatos, "mchpusb", "inf")
			Else
				$sDatos=sCrear_usb_desc_scope(	GUICtrlRead($txtnombre), _
												GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
										)
                 vGuardar_archivos($sDatos, "usb_desc_scope", "h")
			 EndIf
		EndIf
    Else ; va la parte de CDC
        If BitAnd(GUICtrlRead($chkguardarambos),$GUI_CHECKED)= 1 Then
            $sDatos = sCrear_mchpcdc(GUICtrlRead($txtnombre), _
					                GUICtrlRead($txtvid),GUICtrlRead($txtpid), _
									GUICtrlRead($txtversion),GUICtrlRead($txtfecha), _
									GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante) _
									)
            vGuardar_archivos($sDatos, "mchpcdc", "inf")
            $sDatos = ""
            $sDatos = sCrear_usb_desc_cdc(GUICtrlRead($txtnombre), _
										GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
										)
			vGuardar_archivos($sDatos,"usb_desc_cdc","h")
        Else
            If GUICtrlRead($Tab1)=0 Then
				$sDatos = sCrear_mchpcdc(GUICtrlRead($txtnombre), _
										GUICtrlRead($txtvid),GUICtrlRead($txtpid), _
										GUICtrlRead($txtversion),GUICtrlRead($txtfecha), _
										GUICtrlRead($txtdescripcion),GUICtrlRead($txtfabricante) _
										)
				vGuardar_archivos($sDatos, "mchpcdc", "inf")
			Else
				$sDatos = sCrear_usb_desc_cdc(GUICtrlRead($txtnombre), _
											GUICtrlRead($txtvid),GUICtrlRead($txtpid) _
											)   
				vGuardar_archivos($sDatos, "usb_desc_cdc", "h")
            EndIf
        EndIf
 EndIf

EndFunc
;****************************************************************
Func Form1Close()
	vGuardar_DATos_ini()
#cs
	MsgBox(0,"todos los campos: ", "$txtnombre: " _
	& GUICtrlRead($txtnombre) & @CRLF & _
	"$txtvid: " & GUICtrlRead($txtvid) & @CRLF & _
	"$txtpid: " & GUICtrlRead($txtpid) & @CRLF & _
	"$txtubicacion: " & GUICtrlRead($txtubicacion) & @CRLF & _
	"$txtdescripcion: " & GUICtrlRead($txtdescripcion) & @CRLF & _
	"$txtfabricante: " & GUICtrlRead($txtfabricante) & @CRLF & _
	"$txtversion: " & GUICtrlRead($txtversion) & @CRLF & _
	"$txtfecha: " & GUICtrlRead($txtfecha) & @CRLF & _
	"$txtguid: " & GUICtrlRead($txtguid) & @CRLF & _
	"$txtclassname: " & GUICtrlRead($txtclassname) & @CRLF & _
	"$txtclassdesc: " & GUICtrlRead($txtclassdesc) & @CRLF & _
	"$sRuta_nombre_icono: " & $sRuta_nombre_icono & @CRLF & _
	"$sNombre_icono: " & $sNombre_icono); & @CRLF & _
#ce
	Exit
EndFunc

;****************************************************************
; funciones que no se usaran
;****************************************************************
Func chkguardarambosClick()

EndFunc

;****************************************************************

Func txtclassdescChange()

EndFunc
;****************************************************************
Func txtclassnameChange()

EndFunc
;****************************************************************
Func txtdescripcionChange()

EndFunc
;****************************************************************
Func txtfabricanteChange()

EndFunc
;****************************************************************
Func txtfechaChange()

EndFunc
;****************************************************************
Func txtguidChange()

EndFunc
;****************************************************************
Func txtnombreChange()

EndFunc
;****************************************************************
Func txtpidChange()

EndFunc
;****************************************************************
Func txtubicacionChange()

EndFunc
;****************************************************************
Func txtversionChange()

EndFunc
;****************************************************************
Func txtvidChange()

EndFunc

Func mnuopcionesavanzadas_Click()
	GUISetState(@SW_SHOW,$Form_Opciones_Avanzadas)
	GUISetState(@SW_DISABLE,$Form1)
EndFunc	

Func FormOAClose()
	GUISetState(@SW_HIDE,$Form_Opciones_Avanzadas)
	GUISetState(@SW_ENABLE,$Form1)
EndFunc	